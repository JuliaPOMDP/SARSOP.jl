var documenterSearchIndex = {"docs":
[{"location":"api/#Solver-Documentation","page":"Solver Documentation","title":"Solver Documentation","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"Documentation for the SARSOP.jl user interface.","category":"page"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"CurrentModule = SARSOP","category":"page"},{"location":"api/#Contents","page":"Solver Documentation","title":"Contents","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#Index","page":"Solver Documentation","title":"Index","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#Solver","page":"Solver Documentation","title":"Solver","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"SARSOPSolver","category":"page"},{"location":"api/#SARSOP.SARSOPSolver","page":"Solver Documentation","title":"SARSOP.SARSOPSolver","text":"SARSOPSolver\n\nBase solver type for SARSOP. Contains an options dictionary with the following entries:\n\n'fast': use fast (but very picky) alternate parser for .pomdp files\n'randomization': turn on randomization for the sampling algorithm\n'precision': run ends when target precision is reached\n'timeout':  [sec] If running time exceeds the specified value, pomdpsol writes out a policy and terminates\n'memory': [MB] If memory usage exceeds the specified value, pomdpsol writes out a policy and terminates\n'trial-improvement-factor': terminates when the gap between bounds reaches this value\n'policy-interval':  the time interval between two consecutive write-out of policy files\nverbose: [true/false] whether to print output from the solver. Default: true\n\n\n\n\n\n","category":"type"},{"location":"api/#File-manipulation","page":"Solver Documentation","title":"File manipulation","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"POMDPFile\nto_pomdpx\nload_policy","category":"page"},{"location":"api/#SARSOP.POMDPFile","page":"Solver Documentation","title":"SARSOP.POMDPFile","text":"POMDPFile\n\nWrites a pomdpx file from a pomdp defined using the explicit interface of POMDPs.jl\n\nConstructors\n\nPOMDPFile(filename) just stores the file name if the file exists\nPOMDPFile(pomdp::POMDP, filename=\"model.pomdpx\"; verbose=true) writes a .pomdpx file from the pomdp definition\n\n\n\n\n\n","category":"type"},{"location":"api/#SARSOP.to_pomdpx","page":"Solver Documentation","title":"SARSOP.to_pomdpx","text":"to_pomdpx(pomdp::POMDPFile)\n\nConvert a .pomdp file to a .pomdpx file.\n\n\n\n\n\n","category":"function"},{"location":"api/#SARSOP.load_policy","page":"Solver Documentation","title":"SARSOP.load_policy","text":"load_policy(pomdp::POMDP, file_name::AbstractString)\n\nLoad a policy from an xml file output by SARSOP.\n\n\n\n\n\n","category":"function"},{"location":"api/#Simulation-and-Evaluation","page":"Solver Documentation","title":"Simulation and Evaluation","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"SARSOPSimulator\nsimulate\nSARSOPEvaluator\nevaluate","category":"page"},{"location":"api/#SARSOP.SARSOPSimulator","page":"Solver Documentation","title":"SARSOP.SARSOPSimulator","text":"SARSOPSimulator\n\nsimulate a sarsop policy from the xml files \n\nsim_len  number of steps to use in simulation (default 10)\nsim_num number of simulations\nfast use fast (but very picky) alternate parser for .pomdp files\nsrand set the random seed for the simulation\noutput_file where to write the results\npolicy_filename policy file location\npomdp_filename pomdpx file location\n\n\n\n\n\n","category":"type"},{"location":"api/#POMDPs.simulate","page":"Solver Documentation","title":"POMDPs.simulate","text":"POMDPs.simulate(sim::SARSOPSimulator)\n\nSimulate a SARSOP policy according to the config specified by sim::SARSOPSimulator\n\n\n\n\n\n","category":"function"},{"location":"api/#SARSOP.SARSOPEvaluator","page":"Solver Documentation","title":"SARSOP.SARSOPEvaluator","text":"SARSOPEvaluator\n\nsimulate a sarsop policy from the xml files \n\nsim_len  number of steps to use in simulation (default 10)\nsim_num number of simulations\nfast use fast (but very picky) alternate parser for .pomdp files\nsrand set the random seed for the simulation\nmemory [MB] No memory limit by default. If memory usage exceeds the specified value, the evaluator will switch back \n\nto a more conservative (and slow) methods.\n\noutput_file where to write the results\npolicy_filename policy file location\npomdp_filename pomdpx file location\n\n\n\n\n\n","category":"type"},{"location":"api/#SARSOP.evaluate","page":"Solver Documentation","title":"SARSOP.evaluate","text":"evaluate(ev::SARSOPEvaluator)\n\nsimulate a SARSOP policy according to the configuration specified by ev::SARSOPEvaluator\n\n\n\n\n\n","category":"function"},{"location":"api/#Policy-Graph-Generation","page":"Solver Documentation","title":"Policy Graph Generation","text":"","category":"section"},{"location":"api/","page":"Solver Documentation","title":"Solver Documentation","text":"PolicyGraphGenerator\ngenerate_graph","category":"page"},{"location":"api/#SARSOP.PolicyGraphGenerator","page":"Solver Documentation","title":"SARSOP.PolicyGraphGenerator","text":"PolicyGraphGenerator\n\nfast = false use fast (but very picky) alternate parser for .pomdp files\ngraph_max_depth maximum horizon of the generated policy graph. There is no limit by default.\ngraph_max_branch maximum number of branches of the generated policy graph. Shown will be top in probability. There is no limit by default.\ngraph_min_prob minimum probability threshold for a branch to be shown in the policy graph defaults to zero\ngraph_filename output name for the DOT file to be generated\npomdp_filename pomdp file input \npolicy_filename policy file input\n\n\n\n\n\n","category":"type"},{"location":"api/#SARSOP.generate_graph","page":"Solver Documentation","title":"SARSOP.generate_graph","text":"generate_graph(graphgen::PolicyGraphGenerator)\n\nGenerate a policy graph, see PolicyGraphGenerator to see the available options.\n\n\n\n\n\n","category":"function"},{"location":"details/#Solver-Details","page":"Solver Details","title":"Solver Details","text":"","category":"section"},{"location":"details/","page":"Solver Details","title":"Solver Details","text":"SARSOP.jl is a wrapper for the APPL SARSOP code.  It provides an easy to use interface, that makes model and policy file generation simple. ","category":"page"},{"location":"details/","page":"Solver Details","title":"Solver Details","text":"Details of the SARSOP algorithm can be found in in the paper Kurniawati, Hanna, David Hsu, and Wee Sun Lee. \"SARSOP: Efficient point-based POMDP planning by approximating optimally reachable belief spaces.\" Robotics: Science and Systems. 2008.","category":"page"},{"location":"usage/#Package-Guide","page":"Package Guide","title":"Package Guide","text":"","category":"section"},{"location":"usage/#Installation","page":"Package Guide","title":"Installation","text":"","category":"section"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"The package can be installed by either cloning the code and running build or by using the add function from POMDPs.jl","category":"page"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"Installation with POMDPs.jl:","category":"page"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"using POMDPs\nusing Pkg\nPOMDPs.add_registry()\nPkg.add(\"SARSOP\")","category":"page"},{"location":"usage/#Usage","page":"Package Guide","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"SARSOP.jl makes it easy to interface with the APPL SARSOP solver. Once you have a model defined according to POMDPs.jl, you can generate policies by running the following:","category":"page"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"using POMDPs\nusing SARSOP\nusing POMDPModels # this contains the TigerPOMDP model\n\npomdp = TigerPOMDP() # this comes from POMDPModels, you will want this to be your concrete POMDP type\n\nsolver = SARSOPSolver()\npolicy = solve(solver, pomdp)\n\n# the policy will be saved to a file and can be loaded in an other julia session as follows:\npolicy = load_policy(pomdp, \"policy.out\")","category":"page"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"We can simulate, evaluate and create policy graphs:","category":"page"},{"location":"usage/","page":"Package Guide","title":"Package Guide","text":"using POMDPTools\n# Policy can be used to map belief to actions\nb = uniform_belief(pomdp) # from POMDPModelTools\na = action(policy, b) \n\n# simulate the SARSOP policy\nsimulator = SARSOPSimulator(sim_num = 5, sim_len = 5, \n                            policy_filename = \"policy.out\",\n                            pomdp_filename = \"model.pomdpx\")\nsimulate(simulator) \n\n# evaluate the SARSOP policy\nevaluator = SARSOPEvaluator(sim_num = 5, sim_len = 5, \n                            policy_filename = \"policy.out\",\n                            pomdp_filename = \"model.pomdpx\")\nevaluate(evaluator)\n\n# generates a policy graph\ngraphgen = PolicyGraphGenerator(graph_filename = \"Tiger.dot\",\n                                policy_filename = \"policy.out\",\n                                pomdp_filename = \"model.pomdpx\")\ngenerate_graph(graphgen)","category":"page"},{"location":"#SARSOP","page":"SARSOP","title":"SARSOP","text":"","category":"section"},{"location":"","page":"SARSOP","title":"SARSOP","text":"A Julia wrapper for the SARSOP partially observable Markov decision process solver.","category":"page"},{"location":"#Package-Features","page":"SARSOP","title":"Package Features","text":"","category":"section"},{"location":"","page":"SARSOP","title":"SARSOP","text":"Easy to use interface for the APPL SARSOP package\nAutomatically generated .pomdpx files using the POMDPs.jl interface\nAutomatic policy file parsing and policy generation","category":"page"},{"location":"#Manual-Outline","page":"SARSOP","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"SARSOP","title":"SARSOP","text":"","category":"page"}]
}
