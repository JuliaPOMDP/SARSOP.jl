"""
    SARSOPPolicy

Abstract policy type - parent of POMDP and MOMDP policy types
"""
abstract SARSOPPolicy <: Policy

"""
    POMDPPolicy

Policy type for POMDPs that contains a reference to the .policy file generated by pomdpsol.
Contains the alpha vectors and the action mapping required to execute a policy.
"""
type POMDPPolicy <: SARSOPPolicy
    filename::AbstractString
    alphas::Alphas
    pomdp::POMDP
    action_map::Vector{Action}
    POMDPPolicy(filename::AbstractString, alphas::Alphas, pomdp::POMDP) = new(filename, alphas, pomdp, Action[])
    function POMDPPolicy(filename="out.policy")
        self = new()
        self.filename = filename
        if isfile(filename)
            self.alphas = POMDPAlphas(filename)
        else
            self.alphas = POMDPAlphas()
        end
        return self
    end
end

"""
    MOMDPPolicy

Policy type for MOMDPs that contains a reference to the .policy file generated by pomdpsol.
Contains the alpha vectors and the action mapping required to execute a policy.
"""
type MOMDPPolicy <: SARSOPPolicy
    filename::AbstractString
    alphas::Alphas
    pomdp::POMDP
    action_map::Vector{Action}
    MOMDPPolicy(filename::AbstractString, alphas::Alphas, pomdp) = new(filename, alphas, pomdp, Action[])
    function MOMDPPolicy(filename="out.policy")
        self = new()
        self.filename = filename
        if isfile(filename)
            self.alphas = MOMDPAlphas(filename)
        else
            self.alphas = MOMDPAlphas()
        end
        return self
    end
end

"""
    action(policy, b)

Returns the action index for a blief 'b' according to 'policy' for a POMDP.
"""
function action(policy::POMDPPolicy, b::Belief)
    return action(policy.alphas, b)
end

"""
    action(policy, b, x)

Returns the action index for a blief 'b' according to 'policy' given the fully observable variable index 'x'.
Used for MOMDPs
"""
function action(policy::MOMDPPolicy, b::Belief, x::Int64)
    # for MOMDP
    return action(policy.alphas, b, x)
end


"""
    alphas(policy)

Returns the alpha vector matrix `vector length x number vectors`
"""
alphas(policy::SARSOPPolicy) = policy.alphas.alpha_vectors
